module Standard.Box is
    type Box[T: Type]: Linear;

    generic [T: Type]
    function Make(val: T): Option[Box[T]];

    generic [T: Type]
    function Unbox(box: Box[T]): T;

    generic [T: Free]
    function Swap_Free(box: Box[T], new: T): Box[T];

    generic [T: Free, R: Region]
    function Read_Free(boxref: Reference[Box[T], R]): T;

    generic [T: Free, R: Region]
    function Store_Free(boxref: WriteReference[Box[T], R], value: T): Unit;

    generic [T: Free, R: Region]
    function Swap_Mut(boxref: WriteReference[Box[T], R], value: T): T;
end module.
